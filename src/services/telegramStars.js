import api from './api';

export const telegramStarsService = {
  // –û—Ç–ø—Ä–∞–≤–∏—Ç—å invoice –∫–Ω–æ–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ –±–æ—Ç–∞
  async purchaseSubscription(planType) {
    try {
      console.log('üí≥ Starting purchase for plan:', planType);

      // 1. –°–æ–∑–¥–∞—ë–º invoice –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞
      const { data } = await api.post('/payment/request-invoice-button', { 
        planType 
      });

      if (!data.success) {
        throw new Error(data.error || 'Failed to send invoice');
      }

      console.log('‚úÖ Invoice button sent to user');

      return {
        success: true,
        message: 'Check your chat with the bot for payment',
        needsStars: false
      };

    } catch (error) {
      console.error('Purchase error:', error);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (error.response?.status === 403) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
        throw new Error('bot_blocked');
      }
      
      throw error;
    }
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
  async checkPaymentStatus(invoicePayload) {
    try {
      const { data } = await api.get(`/payment/check-status?payload=${invoicePayload}`);
      return data;
    } catch (error) {
      console.error('Check payment status error:', error);
      return null;
    }
  },

  // –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∫—É–ø–∫–∏ Telegram Stars
  openStarsPurchase() {
    const tg = window.Telegram?.WebApp;
    
    if (tg && tg.openTelegramLink) {
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º Fragment –¥–ª—è –ø–æ–∫—É–ø–∫–∏ Stars
      tg.openTelegramLink('https://t.me/PremiumBot?start=stars');
    } else {
      window.open('https://t.me/PremiumBot?start=stars', '_blank');
    }
  }
};